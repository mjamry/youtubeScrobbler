window.Common=window.Common||{},Logger=function(){Logger._instance=null},Logger.getInstance=function(){if(null===Logger._instance)throw"Instance of Logger has not been set yet!";return Logger._instance},Logger.setInstance=function(a){if(null!==Logger._instance)throw"Instance of Logger has been already set!";Logger._instance=a},LoggerImpl=function(){this._eventBroker=null},LoggerImpl.prototype={_getFormatedTimestamp:function(){var a=new Date,b=a.getMilliseconds(),c=a.getSeconds();return c=10>c?"0"+c:c,b=100>b?10>b?"00"+b:"0"+b:b,"["+a.getHours()+":"+a.getMinutes()+":"+c+"."+b+"] "},initialise:function(){this._eventBroker=EventBroker.getInstance()},info:function(a){a="[INF]"+this._getFormatedTimestamp()+a,console.info(a),this._eventBroker&&this._eventBroker.fireEventWithData(window.Common.LoggerEvents.LoggedInfo,a)},error:function(a){a="[ERR]"+this._getFormatedTimestamp()+a,console.error(a),this._eventBroker&&this._eventBroker.fireEventWithData(window.Common.LoggerEvents.LoggerError,a)},warning:function(a){a="[WRN]"+this._getFormatedTimestamp()+a,console.warn(a),this._eventBroker&&this._eventBroker.fireEventWithData(window.Common.LoggerEvents.LoggerWarning,a)},debug:function(a){a="[DBG]"+this._getFormatedTimestamp()+a,console.debug(a),this._eventBroker&&this._eventBroker.fireEventWithData(window.Common.LoggerEvents.LoggerDebug,a)}},window.Common=window.Common||{},window.Common.LoggerEvents={LoggedInfo:"LoggedInfo",LoggerError:"LoggedError",LoggerWarning:"LoggedWarning",LoggerDebug:"LoggedDebug"},window.Common=window.Common||{},window.Common.UrlParserConstants={URL_PARSE_ERR:"0",PARAMS_START_SIGN:"?",PARAMS_SEPARATOR:"&",PARAM_VALUE_INDICATOR:"="},window.Common.UrlParser=function(){},window.Common.UrlParser.prototype={getParameterValue:function(a,b){var c;try{var d=a.split(window.Common.UrlParserConstants.PARAMS_START_SIGN);c=d[1].split(window.Common.UrlParserConstants.PARAMS_SEPARATOR)}catch(e){return Logger.getInstance().warning("Url parsing has failed. Ex: "+e),window.Common.UrlParserConstants.URL_PARSE_ERR}for(var f=0;f<c.length;f++){var g=c[f].split(window.Common.UrlParserConstants.PARAM_VALUE_INDICATOR);if(g[0]===b)return g[1]}return window.Common.UrlParserConstants.URL_PARSE_ERR}},window.Common=window.Common||{},EventBroker=function(){EventBroker._instance=null},EventBroker.setInstance=function(a){if(null!==EventBroker._instance){var b="Instance of EventBroker has been already set!";throw Logger.getInstance().error(b),b}EventBroker._instance=a},EventBroker.getInstance=function(){if(null===EventBroker._instance){var a="Instance of EventBroker has not been set yet!";throw Logger.getInstance().error(a),a}return EventBroker._instance},window.Common.EventBrokerImpl=function(){this.listeners={},Logger.getInstance().info("Event broker has been created.")},window.Common.EventBrokerImpl.prototype={addListener:function(a,b,c,d){var e=d||null;this.listeners[a]||(this.listeners[a]=[]),this.listeners[a].push({method:b,args:c,context:e})},removeListener:function(a,b){for(var c=this.listeners[a],d=0;d<c.length;d++)c[d].method===b&&c.splice(d,1)},fireEvent:function(a){if(this.listeners[a])for(var b=0;b<this.listeners[a].length;b++){var c=this.listeners[a][b];c.method.call(c.context)}},fireEventWithData:function(a,b){if(this.listeners[a])for(var c=0;c<this.listeners[a].length;c++){var d=this.listeners[a][c];d.method.call(d.context,b)}}},window.Common=window.Common||{},Cookie=function(){Cookie._instance=null},Cookie.setInstance=function(a){if(null!==Cookie._instance){var b="Instance of Cookie has been already set!";throw Logger.getInstance().error(b),b}Cookie._instance=a},Cookie.getInstance=function(){if(null===Cookie._instance){var a="Instance of Cookie has not been set yet!";throw Logger.getInstance().error(a),a}return Cookie._instance},window.Common.CookieImpl=function(){$.cookie.json=!0,Logger.getInstance().info("Cookies handler has been created.")},window.Common.CookieImpl.prototype={setCookie:function(a,b,c){$.cookie(a,b,c),Logger.getInstance().debug("[Cookie] It has been created - '"+a+"' : "+b)},getCookie:function(a){var b=$.cookie(a);return b?Logger.getInstance().debug("[Cookie] '"+a+"' has been read and has value: "+b):Logger.getInstance().warning("[Cookie] '"+a+"' does not exist"),b},removeCookie:function(a){$.removeCookie(a),Logger.getInstance().debug("[Cookie] '"+a+"' has been removed.")}},window.Common=window.Common||{},window.Common.CookiesNames={sessionCookie:"session"},window.Common=window.Common||{},TimeParser=function(){TimeParser._instance=null},TimeParser.getInstance=function(){if(null===TimeParser._instance){var a="Instance of TimeParser has not been set yet!";throw Logger.getInstance().error(a),a}return TimeParser._instance},TimeParser.setInstance=function(a){if(null!==TimeParser._instance){var b="Instance of TimeParser has been already set!";throw Logger.getInstance().error(b),b}TimeParser._instance=a},window.Common.TimeParserImpl=function(){this.MinutesInHour=60,this.SecondsInMinute=60,this.MsInSecond=1e3},window.Common.TimeParserImpl.prototype={_timeCorrection:function(a){return 10>a?"0"+a:a},getMinutes:function(a){return Math.round(a/this.MsInSecond/this.SecondsInMinute)},getSeconds:function(a){return Math.round(a/this.MsInSecond)},getHumanReadableFormat:function(a){a=Math.round(a);var b=a%this.SecondsInMinute,c=parseInt(a/this.SecondsInMinute,10);if(c>=this.MinutesInHour){var d=parseInt(c/this.MinutesInHour,10);return c-=d*this.MinutesInHour,d+":"+this._timeCorrection(c)+":"+this._timeCorrection(b)}return c+":"+this._timeCorrection(b)}},window.Common=window.Common||{},LocalStorage=function(){LocalStorage._instance=null},LocalStorage.setInstance=function(a){if(null!==LocalStorage._instance){var b="Instance of LocalStorage has been already set!";throw Logger.getInstance().error(b),b}LocalStorage._instance=a},LocalStorage.getInstance=function(){if(null===LocalStorage._instance){var a="Instance of LocalStorage has not been set yet!";throw Logger.getInstance().error(a),a}return LocalStorage._instance},window.Common.LocalStorageImpl=function(){},window.Common.LocalStorageImpl.prototype={setData:function(a,b){Logger.getInstance().info("[LocalStorage] "+a+" has been saved."),localStorage.setItem(a,JSON.stringify(b))},getData:function(a){var b=JSON.parse(localStorage.getItem(a));return b&&Logger.getInstance().info("[LocalStorage] "+a+" has been read."),b},removeData:function(a){Logger.getInstance().info("[LocalStorage] "+a+" has been removed."),localStorage.removeItem(a)}},window.Common=window.Common||{},window.Common.GlobalErrorHandler=function(){},window.Common.GlobalErrorHandler.prototype={_handleError:function(a,b,c){var d=b.split("/");d=d[d.length-1];var e="[ErrorHandler] Error: "+a+" | occurred in: "+d+" line: "+c;Logger.getInstance().error(e)},initialise:function(){var a=window.onerror;window.onerror=$.proxy(function(b,c,d){return this._handleError(b,c,d),a?a(b,c,d):!1},this)}},window.Common=window.Common||{},window.Common.ApplicationEvents={ApplicationClosed:"ApplicationClosed"},window.Common=window.Common||{},UserNotifier=function(){UserNotifier._instance=null},UserNotifier.setInstance=function(a){if(null!==UserNotifier._instance){var b="Instance of UserNotifier has been already set!";throw Logger.getInstance().error(b),b}UserNotifier._instance=a},UserNotifier.getInstance=function(){if(null===UserNotifier._instance){var a="Instance of UserNotifier has not been set yet!";throw Logger.getInstance().error(a),a}return UserNotifier._instance},window.Common.UserNotifierImpl=function(){},window.Common.UserNotifierImpl.prototype={info:function(a,b){EventBroker.getInstance().fireEventWithData(window.Common.UserNotifierEvents.InfoNotificationRequested,{message:a,undoCallback:b})},error:function(a){EventBroker.getInstance().fireEventWithData(window.Common.UserNotifierEvents.ErrorNotificationRequested,{message:a})}},window.Common.UserNotifierEvents={InfoNotificationRequested:"InfoNotificationRequested",ErrorNotificationRequested:"ErrorNotificationRequested"},window.ApplicationCore=window.ApplicationCore||{},window.UI=window.UI||{},window.LastFm=window.LastFm||{},$(function(){$("#controls-schemes").hide();var a=new window.ApplicationCore.CoreServicesFactory,b=new window.UI.UIControllersFactory,c=new window.Player.PlayerServicesFactory,d=new window.Common.GlobalErrorHandler;d.initialise(),new Logger;var e=a.createLoggerService();Logger.setInstance(e),new EventBroker,this._eventBroker=a.createBrokerHandler(),EventBroker.setInstance(this._eventBroker),e.initialise(this._eventBroker);var f=b.createLoggerViewController();f.initialise(),f.isLoggingAllowed=!0,new UserNotifier;var g=a.createUserNotifier();UserNotifier.setInstance(g),Logger.getInstance().info("Application initialisation started."),new TimeParser,TimeParser.setInstance(new window.Common.TimeParserImpl),new LocalStorage,LocalStorage.setInstance(new window.Common.LocalStorageImpl),new Cookie,Cookie.setInstance(a.createCookieHandler());var h=new window.ApplicationCore.AppCore(a,b,c);h.initialise();var i=new window.Tracking.GoogleEventTrackerImpl(window.Tracking.GoogleTrackerConfig);new GoogleTracker,GoogleTracker.setInstance(i);var j=new window.Tracking.GoogleUiTracker(window.Tracking.GoogleTrackerConfig);j.hookUpToPlaybackControlEvents(window.UI.PlaybackControlConfiguration),j.hookUpToPlaylistControlEvents(window.UI.PlaylistControlConfiguration),j.hookUpToTestControlEvents(window.UI.TestReportUIConfig),j.hookUpToLoggerControlEvents(window.UI.LoggerUIConfig),j.hookUpToMediaLoadEvents(window.UI.MediaLoadConfig),j.hookUpToPlaylistItemEvents(window.UI.PlaylistUIConfig);var k=b.createTestReportViewController();k.initialise(),Logger.getInstance().info("Application initialisation ended.")}),$(window).unload(function(){EventBroker.getInstance().fireEvent(window.Common.ApplicationEvents.ApplicationClosed)}),window.ApplicationCore=window.ApplicationCore||{},window.Player=window.Player||{},window.ApplicationCore.CoreServicesFactory=function(){this._sessionProvider=null},window.ApplicationCore.CoreServicesFactory.prototype={createBrokerHandler:function(){return new window.Common.EventBrokerImpl},createLoggerService:function(){return new LoggerImpl},createOnlineScrobbler:function(a){return new window.ApplicationCore.OnlineScrobbler(a)},createCookieHandler:function(){return new window.Common.CookieImpl},createSessionHandler:function(){var a=new window.LastFm.LastFmApiFactory;return new window.ApplicationCore.SessionHandler(a.createSessionProvider())},createMediaPlayer:function(a,b){return new window.Player.MediaPlayer(window.Player.MediaPlayerConfig,a,b)},createPlaylistService:function(){return new window.Player.PlaylistService},createPlaybackDetailsService:function(a){return new window.Player.PlaybackDetailsService(a)},createPlaybackControlService:function(a,b){return new window.Player.PlaybackControlService(a,b)},createUserNotifier:function(){return new window.Common.UserNotifierImpl}},window.ApplicationCore=window.ApplicationCore||{},window.UI=window.UI||{},window.Player=window.Player||{},window.ApplicationCore.AppCore=function(a,b,c){this.uiCore=b.createUICore(),this.sessionHandler=a.createSessionHandler(),this.onlineScrobbler=a.createOnlineScrobbler(this.sessionHandler),this.playlistService=a.createPlaylistService(),this.player=a.createMediaPlayer(this.uiCore.getPlayerContainer(),this.playlistService),this.playbackDetailsService=a.createPlaybackDetailsService(this.player),this.playlistFlowController=c.createPlaylistFlowController(this.playlistService),this.playbackControlService=a.createPlaybackControlService(this.player,this.playlistFlowController),this.playlistElementDetailsProvider=c.createPlaylistElementDetailsProvider(this.playlistService,this.sessionHandler);var d=c.createPlaylistElementLoveStateModifier(this.sessionHandler,this.playlistService);this.playlistViewController=b.createPlaylistViewController(this.playlistService,this.playbackControlService,this.playlistFlowController),this.playbackDetailsViewController=b.createPlaybackDetailsViewController(this.playbackDetailsService),this.playbackControlViewController=b.createPlaybackControlViewController(this.player,this.playbackControlService),this.playlistControlViewController=b.createPlaylistControlViewController(this.playlistService,this.playlistFlowController,d),this.sessionViewController=b.createSessionViewController(this.sessionHandler),this.mediaLoadViewController=b.createMediaLoadViewController(this.playlistService),this.playlistItemEditorViewController=b.createPlaylistItemEditorViewController(this.playlistService),this.colorSchemeControlViewController=b.createColorSchemeControlViewController(),this.userNotificationViewController=b.createUserNotificationViewController()},window.ApplicationCore.AppCore.prototype={initialise:function(){this.playbackDetailsService.initialise(),this.playbackControlService.initialise(),this.playlistViewController.initialise(),this.playbackDetailsViewController.initialise(),this.playbackControlViewController.initialise(),this.userNotificationViewController.initialise(),this.playlistControlViewController.initialise(),this.playlistElementDetailsProvider.initialise(),this.mediaLoadViewController.initialise(),this.sessionViewController.initialise(),this.playlistItemEditorViewController.initialise(),this.onlineScrobbler.initialise(),this.colorSchemeControlViewController.initialise(),this.playlistService.initialise()}},window.ApplicationCore=window.ApplicationCore||{},window.Player=window.Player||{},window.Common=window.Common||{},window.LastFm=window.LastFm||{},window.ApplicationCore.OnlineScrobbler=function(a){this._sessionHandler=a,this._lastFmFactory=new window.LastFm.LastFmApiFactory,this._scrobbler=this._lastFmFactory.createScrobbler(),this._trackStartPlayingTime=null,this._currentlyLoaded=null,Logger.getInstance().info("Scrobbler has been created.")},window.ApplicationCore.OnlineScrobbler.prototype={_trackCanBeScrobbled:function(a,b){var c=0;if(a&&a.duration&&a.duration.getInSeconds()>30){var d=(new Date).getTime()-b;c=TimeParser.getInstance().getSeconds(d);var e=TimeParser.getInstance().getMinutes(d);if(e>4||c>a.duration.getInSeconds()/2)return!0}var f="Cannot scrobble track, because playing time was to short: "+c+"s.";return Logger.getInstance().warning("[Scrobbler] "+f),UserNotifier.getInstance().error("Cannot scrobble track, because playing time was to short: "+c+"s."),!1},_updateScrobbling:function(a){this._sessionHandler.isSessionEstablished()&&this._trackCanBeScrobbled(a,this._trackStartPlayingTime)&&this._scrobbler.scrobble({track:a.title,artist:a.artist.name,timestamp:TimeParser.getInstance().getSeconds(this._trackStartPlayingTime)},this._sessionHandler.getSession())},_updateNowPlaying:function(a){this._sessionHandler.isSessionEstablished()&&this._currentlyLoaded!=a&&(this._currentlyLoaded=a,this._trackStartPlayingTime=(new Date).getTime(),this._scrobbler.updateNowPlaying({track:a.title,artist:a.artist.name,duration:a.duration.getInSeconds()},this._sessionHandler.getSession()))},_handleMediaStopped:function(){this._trackStartPlayingTime=null},initialise:function(){EventBroker.getInstance().addListener(window.Player.Events.MediaPlay,$.proxy(function(a){this._updateNowPlaying(a)},this)),EventBroker.getInstance().addListener(window.Player.Events.MediaChanged,$.proxy(function(a){this._updateScrobbling(a.previous)},this)),EventBroker.getInstance().addListener(window.Player.Events.MediaStopped,$.proxy(this._handleMediaStopped,this))}},window.ApplicationCore=window.ApplicationCore||{},window.ApplicationCore.SessionHandler=function(a){this.currentSession=null,this._sessionProvider=a},window.ApplicationCore.SessionHandler.prototype={_postSessionObtained:function(){Logger.getInstance().info("Session has been established."),Logger.getInstance().debug("Session details - user: "+this.currentSession.name+", key: "+this.currentSession.key),EventBroker.getInstance().fireEventWithData(window.LastFm.Events.SessionEstablished,this.currentSession.name)},_handleSessionObtained:function(a){return function(b){a.currentSession=b,a._setSessionCookie(b),a._postSessionObtained()}},_handleSessionObtainingFailed:function(){this.currentSession=null,EventBroker.getInstance().fireEvent(window.LastFm.Events.SessionEstablishmentFailed)},_setSessionCookie:function(a){Cookie.getInstance().setCookie(window.Common.CookiesNames.sessionCookie,a)},_getSessionCookie:function(){var a=Cookie.getInstance().getCookie(window.Common.CookiesNames.sessionCookie);return a||(a=null),a},closeSession:function(){Cookie.getInstance().removeCookie(window.Common.CookiesNames.sessionCookie),this.currentSession=null,EventBroker.getInstance().fireEvent(window.LastFm.Events.SessionClosed)},createNewSession:function(a){this.currentSession=this._getSessionCookie(),null===this.currentSession?this._sessionProvider.create(a,{success:this._handleSessionObtained(this),error:this._handleSessionObtainingFailed}):this._postSessionObtained()},isSessionEstablished:function(){return null!==this.currentSession},getSession:function(){return null!==this.currentSession?this.currentSession:(Logger.getInstance().warning("Session has not been established yet."),{name:""})}},window.LastFm=window.LastFm||{},window.LastFm.Events={NowPlayingUpdated:"NowPlayingUpdated",NowPlayingUpdateFailed:"NowPlayingUpdateFailed",TrackScrobbled:"TrackScrobbled",ScrobblingFailed:"ScrobblingFailed",TrackLoveStateChanged:"TrackLoveStateChanged",TrackLoved:"TrackLoved",TrackUnloved:"TrackUnloved",SessionEstablished:"SessionEstablished",SessionClosed:"SessionClosed",SessionEstablishmentFailed:"SessionEstablishmentFiled"},window.LastFm=window.LastFm||{},window.LastFm.LastFmConstants={API_KEY:"c6374de0b62e5b4a8776bf85a6b56801",API_SECRET:"2584ffa53e3a1cbabded6a43fd9dc7c5"},LastFmApiCommon={CACHE:new LastFMCache,DATA_PROVIDER:new LastFM({apiKey:window.LastFm.LastFmConstants.API_KEY,apiSecret:window.LastFm.LastFmConstants.API_SECRET,cache:this.CACHE})},window.LastFm.Errors={2:"Invalid service - This service does not exist",3:"Invalid Method - No method with that name in this package",4:"Authentication Failed - You do not have permissions to access the service",5:"Invalid format - This service doesn't exist in that format",6:"Invalid parameters - Your request is missing a required parameter",7:"Invalid resource specified",8:"Operation failed - Something else went wrong",9:"Invalid session key - Please re-authenticate",10:"Invalid API key - You must be granted a valid key by last.fm",11:"Service Offline - This service is temporarily offline. Try again later.",13:"Invalid method signature supplied",16:"There was a temporary error processing your request. Please try again",26:"Suspended API key - Access for your account has been suspended, please contact Last.fm",29:"Rate limit exceeded - Your IP has made too many requests in a short period"},window.LastFm=window.LastFm||{},window.LastFm.LastFmApiFactory=function(){},window.LastFm.LastFmApiFactory.prototype={createInformationProvider:function(){return new window.LastFm.InformationProvider(LastFmApiCommon.DATA_PROVIDER)},createSessionProvider:function(){return new window.LastFm.LastFmSessionProvider(LastFmApiCommon.DATA_PROVIDER)},createScrobbler:function(){return new window.LastFm.Scrobbler(LastFmApiCommon.DATA_PROVIDER)},createTrackLoveStateModifier:function(){return new window.LastFm.TrackLoveStateModifier(LastFmApiCommon.DATA_PROVIDER)}},window.LastFm=window.LastFm||{},window.Common=window.Common||{},window.LastFm.Scrobbler=function(a){this.lastFmApi=a,this._eventBroker=EventBroker.getInstance(),Logger.getInstance().info("LastFm - Scrobbler has been created.")},window.LastFm.Scrobbler.prototype={scrobble:function(a,b){Logger.getInstance().debug("[LastFm] Scrobbling request track: "+a.artist+" - "+a.track),this.lastFmApi.track.scrobble(a,b,{success:$.proxy(function(b){this._eventBroker.fireEventWithData(window.LastFm.Events.TrackScrobbled,b);var c="'"+a.artist+" - "+a.track+"' has been scrobbled.";Logger.getInstance().info("[LastFm] "+c),UserNotifier.getInstance().info(c)},this),error:$.proxy(function(b){this._eventBroker.fireEventWithData(window.LastFm.Events.ScrobblingFailed,b),Logger.getInstance().warning("[LastFm] Scrobbling update failed for: "+a.artist+" - "+a.track),Logger.getInstance().debug("[LastFm] Scrobbling failed: "+window.LastFm.Errors[b.error]+" with message: "+b.message)},this)})},updateNowPlaying:function(a,b){Logger.getInstance().debug("[LastFm] NowPlaying update request with track: "+a.artist+" - "+a.track),this.lastFmApi.track.updateNowPlaying(a,b,{success:$.proxy(function(b){this._eventBroker.fireEventWithData(window.LastFm.Events.NowPlayingUpdated,b),Logger.getInstance().info("[LastFm] NowPlaying has been successfully updated: "+a.artist+" - "+a.track)},this),error:$.proxy(function(b){this._eventBroker.fireEventWithData(window.LastFm.Events.NowPlayingUpdateFailed,b),Logger.getInstance().warning("[LastFm] NowPlaying update failed for: "+a.artist+" - "+a.track),Logger.getInstance().debug("[LastFm] NowPlaying failed: "+window.LastFm.Errors[b.error]+" with message: "+b.message)},this)})}},window.LastFm=window.LastFm||{},window.Common=window.Common||{},window.LastFm.InformationProvider=function(a){this.innerRepository=a,Logger.getInstance().info("LastFm Information provider has been created")},window.LastFm.InformationProvider.prototype={getTrackDetails:function(a,b,c){Logger.getInstance().debug("[LastFm] Track details requested for: "+a.artist.name+" - "+a.title),this.innerRepository.track.getInfo({track:a.title,artist:a.artist.name,username:b.user,autocorrect:1,api_key:window.LastFm.LastFmConstants.API_KEY},{success:$.proxy(function(a){var b=new window.Player.MediaDetails;b.title=a.track.name,b.mbid=a.track.mbid,b.id=a.track.id,b.artist=new window.Player.ArtistDetails({name:a.track.artist.name,mbid:a.track.artist.mbid,url:a.track.artist.url}),a.track.album&&(b.album=new window.Player.AlbumDetails({name:a.track.album.title,mbid:a.track.album.mbid,url:a.track.album.url,cover:a.track.album.image[0]["#text"]})),b.loved="1"==a.track.userloved,Logger.getInstance().info("[LastFm] Track details has been obtained: "+b.artist.name+" - "+b.title),c.done(b)},this),error:$.proxy(function(a){Logger.getInstance().warning("[LastFm] Track details obtaining error: "+window.LastFm.Errors[a]),c.fail()},this)})},getRecommendedArtists:function(a,b,c){this.lastFmApi.user.getRecommendedArtists(a,b,c)},getSimilar:function(a,b,c){this.lastFmApi.track.getSimilar(a,c)}},window.LastFm=window.LastFm||{},window.Common=window.Common||{},window.LastFm.LastFmSessionProvider=function(a){this.lastFmApi=a,Logger.getInstance().info("Last fm session handler has been created.")},window.LastFm.LastFmSessionProvider.prototype={create:function(a,b){Logger.getInstance().debug("Last fm - new session requested using token: "+a),this.lastFmApi.auth.getSession({token:a},{success:$.proxy(function(a){b.success(a.session)},this),error:$.proxy(function(a,c){Logger.getInstance().warning("Cannot establish session: "+c),b.error()},this)})}},window.LastFm=window.LastFm||{},window.LastFm.TrackLoveStateModifier=function(a){this.lastFmApi=a},window.LastFm.TrackLoveStateModifier.prototype={love:function(a,b,c){var d=a.details.artist.name+" - "+a.details.title;Logger.getInstance().debug("Last fm scrobbler - love request with track: "+d),this.lastFmApi.track.love({track:a.details.title,artist:a.details.artist.name},b,{success:$.proxy(function(){var b="'"+a.details.artist.name+" - "+a.details.title+"' has been loved.";Logger.getInstance().info(b),UserNotifier.getInstance().info(b),c.success(a.index,a.details)},this),error:$.proxy(function(a){Logger.getInstance().warning("LastFm Love update failed: "+a.message),Logger.getInstance().debug("LastFm Love failed for: "+d),c.fail()},this)})},unLove:function(a,b,c){var d=a.details.artist.name+" - "+a.details.title;Logger.getInstance().debug("Last fm scrobbler - unlove request with track: "+d),this.lastFmApi.track.unlove({track:a.details.title,artist:a.details.artist.name},b,{success:$.proxy(function(){var b="'"+a.details.artist.name+" - "+a.details.title+"' has been unloved.";Logger.getInstance().info(b),UserNotifier.getInstance().info(b),c.success(a.index,a.details)},this),error:$.proxy(function(a){Logger.getInstance().warning("LastFm UnLove update failed: "+a.message),Logger.getInstance().debug("LastFm UnLove failed for: "+d),c.fail()},this)})}},window.Player=window.Player||{},window.Player.PlayerServicesFactory=function(){},window.Player.PlayerServicesFactory.prototype={createPlaylistElementDetailsProvider:function(a,b){var c=new window.LastFm.LastFmApiFactory;return new window.Player.PlaylistElementDetailsProvider(a,c.createInformationProvider(),b)},createPlaylistElementLoveStateModifier:function(a,b){var c=new window.LastFm.LastFmApiFactory;return new window.Playlist.PlaylistElementLoveStateModifier(c.createTrackLoveStateModifier(),a,b)},createPlaylistFlowController:function(a){return new window.Playlist.PlaylistFlowController(a)}},window.Player=window.Player||{},window.Common=window.Common||{},window.Player.MediaPlayer=function(a,b,c){this.instance=null,this.currentlyLoadedMediaDetails=new window.Player.MediaDetails,this.container=b,this.config=a,this.playlistService=c,EventBroker.getInstance().addListener(window.Player.PlaylistEvents.PlaylistCreated,$.proxy(this._handlePlaylistCreated,this)),EventBroker.getInstance().addListener(window.Player.PlaylistEvents.PlaylistCleared,$.proxy(this._handlePlaylistCleared,this))},window.Player.MediaPlayer.prototype={_updateCurrentMediaDetails:function(a){var b=this.currentlyLoadedMediaDetails;this.currentlyLoadedMediaDetails=a,EventBroker.getInstance().fireEventWithData(window.Player.Events.MediaChanged,{current:this.currentlyLoadedMediaDetails,previous:b})},_createPlayerInstance:function(a){var b=function(a,b){return function(c){a.instance=c,a._initialise(c),Logger.getInstance().info("Media player has been initialised"),a._load(b),a._updateCurrentMediaDetails(b)}},c=$.extend({success:b(this,a),error:function(){Logger.getInstance().error("Media player initialisation failed."),UserNotifier.getInstance().error("Media player initialisation failed. Please refresh page.")}},this.config);new MediaElement(this.container,c)},_handleTimeUpdated:function(a){EventBroker.getInstance().fireEventWithData(window.Player.Events.TimeUpdated,a)},_handlePlaylistCreated:function(){this._createPlayerInstance(this.playlistService.getCurrentItemDetails())},_handlePlaylistCleared:function(){null!==this.instance&&(this.pause(),this.instance.remove(),this.instance=null)},_initialise:function(a){a.addEventListener(window.Player.LibraryEventsNames.play,$.proxy(function(){EventBroker.getInstance().fireEventWithData(window.Player.Events.MediaPlay,this.currentlyLoadedMediaDetails)},this),!1),a.addEventListener(window.Player.LibraryEventsNames.ended,$.proxy(function(){EventBroker.getInstance().fireEventWithData(window.Player.Events.MediaStopped,this.currentlyLoadedMediaDetails)},this),!1),a.addEventListener(window.Player.LibraryEventsNames.pause,$.proxy(function(){EventBroker.getInstance().fireEventWithData(window.Player.Events.MediaPaused,this.currentlyLoadedMediaDetails)},this),!1),a.addEventListener(window.Player.LibraryEventsNames.timeupdate,this._handleTimeUpdated,null,this),a.addEventListener(window.Player.LibraryEventsNames.canplay,$.proxy(function(){this.setVolume(this.config.startVolume)},this),!1)},_load:function(a){var b=[{src:a.url,type:a.mediaType}];this.instance.setSrc(b),this.instance.load()},load:function(a){null!==a&&(this.currentlyLoadedMediaDetails.mediaType!=a.mediaType&&null!==this.instance&&(this.instance.remove(),this.instance=null),null===this.instance?this._createPlayerInstance(a):(this._load(a),this._updateCurrentMediaDetails(a)))},play:function(){this.instance.play()},pause:function(){this.instance.pause()},setPlaybackProgress:function(a){if(this.currentlyLoadedMediaDetails){var b=this.currentlyLoadedMediaDetails.duration.getInSeconds()*a/100;this.instance.setCurrentTime(b),EventBroker.getInstance().fireEventWithData(window.Player.Events.TimeUpdated,b)}},setVolume:function(a){null!==this.instance?this.instance.setVolume(a):this.config.startVolume=a},getVolume:function(){return null!==this.instance?this.instance.volume:this.config.startVolume},getCurrentMediaDetails:function(){return this.currentlyLoadedMediaDetails},setSize:function(a,b){this.instance.setVideoSize(a,b)}},window.Player=window.Player||{},window.Player.ArtistDetails=function(a){return a||{name:"",mbid:"",url:""}},window.Player.AlbumDetails=function(a){return a||{name:"",mbid:"",url:"",cover:""}},window.Player.MediaDetails=function(){},window.Player.MediaDetails.prototype={artist:new window.Player.ArtistDetails,title:"",mbid:"",duration:"",url:"",mediaType:"",id:"",album:new window.Player.AlbumDetails,loved:"",tags:"",clone:function(){var a=new window.Player.MediaDetails;for(var b in this)this.hasOwnProperty(b)&&(a[b]=this[b]);return a},deserialize:function(a){this.artist=new window.Player.ArtistDetails(a.artist),this.album=new window.Player.AlbumDetails(a.album),this.title=a.title,this.mbid=a.mbid,this.duration=new window.Player.Duration(a.duration.duration),this.url=a.url,this.mediaType=a.mediaType,this.id=a.id,this.loved=a.loved}},window.Player=window.Player||{},window.Player.Duration=function(a){this.duration=a},window.Player.Duration.prototype={getInSeconds:function(){return this.duration},getHumanReadable:function(){return TimeParser.getInstance().getHumanReadableFormat(this.duration)}},window.Player=window.Player||{},window.Player.PlaybackDetailsService=function(a){this.mediaDetailsProvider=a,this.state=new window.Player.PlaybackState,this.playbackDetails=null},window.Player.PlaybackDetailsService.prototype={_handleTimeUpdated:function(a){this.playbackDetails=a,this._updatePlaybackDetails()},_handleMediaPaused:function(){this.state.changeState(this.state.paused),this._updatePlaybackDetails()},_handleMediaChanged:function(){this.state.changeState(this.state.playing),this._updatePlaybackDetails()},_handleMediaStopped:function(){this.state.changeState(this.state.stoped),this._updatePlaybackDetails()},_handleMediaPlay:function(){this.state.changeState(this.state.playing),this._updatePlaybackDetails()},_updatePlaybackDetails:function(){this.playbackDetails&&this.playbackDetails.duration>0&&EventBroker.getInstance().fireEvent(window.Player.Events.PlaybackDetailsUpdated)},initialise:function(){var a=EventBroker.getInstance();a.addListener(window.Player.Events.TimeUpdated,this._handleTimeUpdated,null,this),a.addListener(window.Player.Events.MediaPaused,this._handleMediaPaused,null,this),a.addListener(window.Player.Events.MediaStopped,this._handleMediaStopped,null,this),a.addListener(window.Player.Events.MediaChanged,this._handleMediaStopped,null,this),a.addListener(window.Player.Events.MediaPlay,this._handleMediaPlay,null,this)},getPlaybackState:function(){return this.state.getCurrentState()},getMediaDetails:function(){return this.mediaDetailsProvider.getCurrentMediaDetails()},getPlaybackTime:function(){return TimeParser.getInstance().getHumanReadableFormat(this.playbackDetails.currentTime)},getDuration:function(){return TimeParser.getInstance().getHumanReadableFormat(this.playbackDetails.duration)},getPlaybackProgress:function(){return this.playbackDetails.currentTime/this.playbackDetails.duration*100},getDataProgress:function(){return this.playbackDetails.bufferedBytes/this.playbackDetails.bytesTotal*100},clearData:function(){this.playbackDetails={currentTime:0,duration:0,bufferedBytes:0,bytesTotal:0}}},window.Player=window.Player||{},window.Player.PlaybackControlService=function(a,b){this.player=a,this.playlistController=b,this.playbackControlAllowed=!1},window.Player.PlaybackControlService.prototype={_loadMedia:function(a){this.player.load(a),this._autoplay&&this.player.play()},_handleMediaStopped:function(){this.playNext()},_handlePlaylistItemRemoved:function(a){a.isCurrentlyPlayingItemRemoved&&this.playSpecific(a.index)
},_handlePlaylistCreated:function(){this.playbackControlAllowed=!0,EventBroker.getInstance().fireEvent(window.UI.Events.EnableControlButtonsRequested)},_handlePlaylistCleared:function(){this.playbackControlAllowed=!1,EventBroker.getInstance().fireEvent(window.UI.Events.DisableControlButtonsRequested)},initialise:function(){EventBroker.getInstance().addListener(window.Player.Events.MediaStopped,this._handleMediaStopped,null,this),EventBroker.getInstance().addListener(window.Player.PlaylistEvents.PlaylistItemRemoved,this._handlePlaylistItemRemoved,null,this),EventBroker.getInstance().addListener(window.Player.PlaylistEvents.PlaylistCreated,$.proxy(this._handlePlaylistCreated,this)),EventBroker.getInstance().addListener(window.Player.PlaylistEvents.PlaylistCleared,$.proxy(this._handlePlaylistCleared,this))},play:function(){this.playbackControlAllowed&&this.player.play()},pause:function(){this.playbackControlAllowed&&this.player.pause()},playNext:function(){if(this.playbackControlAllowed){var a=this.playlistController.getNext();this._loadMedia(a)}},playPrevious:function(){if(this.playbackControlAllowed){var a=this.playlistController.getPrevious();this._loadMedia(a)}},playSpecific:function(a){var b=this.playlistController.getSpecific(a);null!==b&&this._loadMedia(b)},shuffle:function(){this.playbackControlAllowed&&(this.playlistController.shuffle(),this._updatePlaylist(this.playlistController))},getTrackDetails:function(a){return this.playlistController.getSpecific(a)},setPlaybackProgress:function(a){this.player.setPlaybackProgress(a)}},window.Player=window.Player||{},window.Player.PlaybackState=function(){this.internalState=this.none},window.Player.PlaybackState.prototype={stoped:"Stoped",playing:"Playing",paused:"Paused",none:"",changeState:function(a){this.internalState=a},getCurrentState:function(){return this.internalState}},window.Player=window.Player||{},window.Player.Playlist=function(){this.mediaList=[]},window.Player.Playlist.prototype={currentItemIndex:0,addItem:function(a){this.mediaList.push(a)},addPlaylist:function(a){this.mediaList=this.mediaList.concat(a.mediaList)},get:function(a){return this.mediaList[a]},remove:function(a){a<this.currentItemIndex&&this.currentItemIndex--,this.mediaList.splice(a,1)},replace:function(a,b){this.mediaList[a]=b},first:function(){return this.currentItemIndex=0,this.mediaList[this.currentItemIndex]},last:function(){return this.currentItemIndex=this.length()-1,this.mediaList[this.currentItemIndex]},length:function(){return this.mediaList.length},shuffle:function(){for(var a=this.length()-1;a>=0;a--){var b=Math.floor(Math.random()*a);this.currentItemIndex==a?this.currentItemIndex=b:this.currentItemIndex==b&&(this.currentItemIndex=a);var c=this.mediaList[a];this.mediaList[a]=this.mediaList[b],this.mediaList[b]=c}},deserialize:function(a){for(var b=0;b<a.length;b++){var c=new window.Player.MediaDetails;c.deserialize(a[b]),this.addItem(c)}}},window.Playlist=window.Playlist||{},window.Playlist.PlaylistFlowController=function(a){this.playlistProvider=a,this.isLoopModeOn=!1},window.Playlist.PlaylistFlowController.prototype={getNext:function(){var a=this.playlistProvider.getPlaylist();if(a.currentItemIndex++,a.currentItemIndex==a.length()){if(!this.isLoopModeOn)return a.currentItemIndex=a.length()-1,null;a.currentItemIndex=0}return a.get(a.currentItemIndex)},getPrevious:function(){var a=this.playlistProvider.getPlaylist();if(a.currentItemIndex--,a.currentItemIndex<0){if(!this.isLoopModeOn)return a.currentItemIndex=0,null;a.currentItemIndex=a.length()-1}return a.get(a.currentItemIndex)},shuffle:function(){this.playlistProvider.getPlaylist().shuffle(),this.playlistProvider.refreshPlaylist()},getSpecific:function(a){var b=this.playlistProvider.getPlaylist();return a>=0&&a<b.length()?(b.currentItemIndex=a,b.get(a)):null},toggleLoopMode:function(){return this.isLoopModeOn=!this.isLoopModeOn,this.isLoopModeOn},getCurrentItemIndex:function(){return this.playlistProvider.getPlaylist().currentItemIndex}},window.Player=window.Player||{},window.Common=window.Common||{},window.Player.YouTubePlaylistConstant={API_URL:"https://gdata.youtube.com/feeds/api/",API_VERSION:2,FEED_PARAMS:"alt=jsonc&v=2",FEED_QUANTITY_PARAMS:"&max-results=50&start-index=",PLAYLIST_PARAMETER_NAME:"list",VIDEO_PARAMETER_NAME:"v",PLAYLIST_API_VALUE:"playlists/",VIDEOS_API_VALUE:"videos/",VIDEO_TITLE_ID:1,ARTIST_NAME_ID:0,MAX_NUMBER_OF_RESULTS:50,VIDEO_NAME_SEPARATOR:"-",MEDIA_TYPE:"video/youtube",REGEX_NAMING_PATTERN:"([^\\-]*)-\\s?((?:[^\\{\\}\\(\\)\\[\\]]?)*)(.*)"},window.Player.YouTubePlaylistLoader=function(){},window.Player.YouTubePlaylistLoader.prototype={_splitTitle:function(a){var b=RegExp(window.Player.YouTubePlaylistConstant.REGEX_NAMING_PATTERN),c=b.exec(a);if(c)return{artist:c[1],title:c[2]};throw"[YT] Error occurs while parsing title. Incorrect naming pattern: "+a},_getMediaDetails:function(a){Logger.getInstance().debug("[YT] Received details for media: "+a.title);var b=new window.Player.MediaDetails;b.mediaType=window.Player.YouTubePlaylistConstant.MEDIA_TYPE,b.duration=new window.Player.Duration(a.duration);var c=this._splitTitle(a.title);if(!a.player)throw"[YT] Cannot read media details. Probably file does not exist anymore: "+a.title;return b.artist=new window.Player.ArtistDetails({name:c.artist,mbid:"",url:"",cover:""}),b.title=c.title,b.url=a.player.default,b},_createPlaylist:function(a){for(var b=new window.Player.Playlist,c=0;c<a.length;c++){if(a[c].video.restrictions){var d=a[c].video.restrictions;Logger.getInstance().debug("[YT] Playback restrictions: "+d.length+" | relationship: "+d[0].relationship+" | type: "+d[0].type+" | countries: "+d[0].countries)}var e=null;try{e=this._getMediaDetails(a[c].video)}catch(f){Logger.getInstance().warning(f)}null!==e&&b.addItem(e)}return b},_obtainPlaylistDetails:function(a,b){var c=new window.Player.Playlist,d=window.Player.YouTubePlaylistConstant.API_URL+window.Player.YouTubePlaylistConstant.PLAYLIST_API_VALUE+a+window.Common.UrlParserConstants.PARAMS_START_SIGN+window.Player.YouTubePlaylistConstant.FEED_PARAMS+window.Player.YouTubePlaylistConstant.FEED_QUANTITY_PARAMS;UserNotifier.getInstance().info("Please wait - loading youtube playlist details."),function(a,b,c){return function e(f){var g=f+window.Player.YouTubePlaylistConstant.MAX_NUMBER_OF_RESULTS;Logger.getInstance().debug("[YT] Playlist details request for items in range: "+f+" - "+g),$.getJSON(d+f,function(d){if(d.data.items){var f=d.data.items;a.addPlaylist(c._createPlaylist(f)),d.data.items.length>=window.Player.YouTubePlaylistConstant.MAX_NUMBER_OF_RESULTS?e(g):b(a)}})}}(c,b,this)(1)},_obtainVideoDetails:function(a,b){var c=null,d=window.Player.YouTubePlaylistConstant.API_URL+window.Player.YouTubePlaylistConstant.VIDEOS_API_VALUE+a+window.Common.UrlParserConstants.PARAMS_START_SIGN+window.Player.YouTubePlaylistConstant.FEED_PARAMS;Logger.getInstance().debug("[YT] Video details request"),UserNotifier.getInstance().info("Please wait - loading youtube video details."),$.getJSON(d,$.proxy(function(a){c=this._createPlaylist([{video:a.data}]),b(c)},this))},loadPlaylistFromUrl:function(a,b){Logger.getInstance().debug("[YT] Sending data request for url: "+a);var c=new window.Common.UrlParser,d=c.getParameterValue(a,window.Player.YouTubePlaylistConstant.PLAYLIST_PARAMETER_NAME);if(d!==window.Common.UrlParserConstants.URL_PARSE_ERR)this._obtainPlaylistDetails(d,b);else{var e=c.getParameterValue(a,window.Player.YouTubePlaylistConstant.VIDEO_PARAMETER_NAME);e!==window.Common.UrlParserConstants.URL_PARSE_ERR&&this._obtainVideoDetails(e,b)}}},window.Player=window.Player||{},window.Common=window.Common||{},window.Player.PlaylistService=function(){this.playlist=new window.Player.Playlist,Logger.getInstance().info("Playlist service has been created.")},window.Player.PlaylistService.prototype={_updatePlaylist:function(a){a=a||0,EventBroker.getInstance().fireEventWithData(window.Player.PlaylistEvents.PlaylistUpdated,a)},initialise:function(){this.restorePlaylist()},refreshPlaylist:function(){this._updatePlaylist()},clearPlaylist:function(){var a="Playlist has been cleared. "+this.playlist.length()+" item(s) removed.";Logger.getInstance().info(a),UserNotifier.getInstance().info(a,function(){alert("undo playlist clear")}),this.playlist=new window.Player.Playlist,EventBroker.getInstance().fireEvent(window.Player.PlaylistEvents.PlaylistCleared),this._updatePlaylist()},restorePlaylist:function(){var a=LocalStorage.getInstance().getData("tempPl"),b=new window.Player.Playlist;if(null!==a&&a.mediaList.length>0){b.deserialize(a.mediaList),this.playlist=b,EventBroker.getInstance().fireEventWithData(window.Player.PlaylistEvents.PlaylistCreated,b.length());var c=b.length()+" item(s) have been read and added to the playlist.";Logger.getInstance().info(c),UserNotifier.getInstance().info(c)}},savePlaylist:function(){LocalStorage.getInstance().setData("tempPl",this.playlist);var a="Playlist has been saved with "+this.playlist.length()+" element(s).";Logger.getInstance().info(a),UserNotifier.getInstance().info(a)},addToPlaylist:function(a){this.playlist.addPlaylist(a),this.playlist.length()===a.length()&&EventBroker.getInstance().fireEventWithData(window.Player.PlaylistEvents.PlaylistCreated,a.length());var b=a.length()+" new item(s) have been successfully added to the playlist";Logger.getInstance().info(b),UserNotifier.getInstance().info(b),this._updatePlaylist(a.length())},updateItem:function(a,b){var c=this.playlist.get(a);b.url=c.url,b.mediaType=c.mediaType,b.duration=c.duration,this.playlist.replace(a,b),EventBroker.getInstance().fireEventWithData(window.Player.PlaylistEvents.PlaylistItemUpdated,{mediaDetails:b,index:a})},removeItem:function(a){var b=this.playlist.currentItemIndex,c=this.playlist.get(a);this.playlist.remove(a);var d="'"+c.artist.name+" - "+c.title+"' has been removed from the playlist.";Logger.getInstance().info(d),UserNotifier.getInstance().info(d,function(){alert("undo remove item")}),EventBroker.getInstance().fireEventWithData(window.Player.PlaylistEvents.PlaylistItemRemoved,{index:a,isCurrentlyPlayingItemRemoved:a==b}),this._updatePlaylist()},getPlaylist:function(){return this.playlist},getCurrentItemDetails:function(){var a=this.playlist.currentItemIndex;return this.playlist.get(a)}},window.Player=window.Player||{},window.Player.PlaylistEvents={PlaylistUpdated:"PlaylistUpdated",PlaylistItemUpdated:"PlaylistItemUpdated",PlaylistItemRemoved:"PlaylistItemRemoved",PlaylistCleared:"PlaylistCleared",PlaylistCreated:"PlaylistCreated",PlaylistItemEditionRequested:"PlaylistItemEditionRequested"},window.Player=window.Player||{},window.Player.PlaylistElementDetailsProvider=function(a,b,c){this.sessionProvider=c,this.playlistProvider=a,this.detailsProvider=b},window.Player.PlaylistElementDetailsProvider.prototype={_handleDetailsObtained:function(a,b){return function(c){b.playlistProvider.updateItem(a,c),b.playlistProvider.updateItem(a,c),a++,b._getDetails(a,b)}},_handleObtainingError:function(a,b){return function(){a++,b._getDetails(a,b)}},_getDetails:function(a,b){if(a<b.playlistProvider.getPlaylist().length()){var c=b._handleDetailsObtained(a,b),d=b._handleObtainingError(a,b);this.detailsProvider.getTrackDetails(b.playlistProvider.getPlaylist().get(a),{user:this.sessionProvider.getSession().name},{done:c,fail:d})}},_handlePlaylistUpdated:function(a){var b=this.playlistProvider.getPlaylist().length()-a;this._getDetails(b,this)},initialise:function(){EventBroker.getInstance().addListener(window.Player.PlaylistEvents.PlaylistUpdated,this._handlePlaylistUpdated,null,this)}},window.Playlist=window.Playlist||{},window.Playlist.PlaylistElementLoveStateModifier=function(a,b,c){this.innerModifier=a,this.sessionProvider=b,this.playlistService=c},window.Playlist.PlaylistElementLoveStateModifier.prototype={toggleTrackLoveState:function(a){var b=this.playlistService.getPlaylist().currentItemIndex,c=this.playlistService.getPlaylist().get(b);c.loved?this._unlove(c,b,a):this._love(c,b,a)},_love:function(a,b,c){var d={details:a,index:b},e={success:function(a,b){b.loved=!0,c(a,b)}};this.innerModifier.love(d,this.sessionProvider.getSession(),e)},_unlove:function(a,b,c){var d={details:a,index:b},e={success:function(a,b){b.loved=!1,c(a,b)}};this.innerModifier.unLove(d,this.sessionProvider.getSession(),e)}},window.Player=window.Player||{},window.Player.MediaPlayerConfig={startVolume:.5,defaultVideoWidth:450,defaultVideoHeight:338,pluginWidth:-1,pluginHeight:-1,enableAutosize:!1,enablePluginDebug:!1,alwaysShowControls:!1,plugins:["flash"],pluginPath:"media/",flashName:"flashmediaelement.swf",features:["progress"],timerRate:1e3},window.Player.LibraryEventsNames={loadeddata:"loadeddata",progress:"progress",timeupdate:"timeupdate",seeked:"seeked",canplay:"canplay",play:"play",playing:"playing",pause:"pause",loadedmetadata:"loadedmetadata",ended:"ended",volumechange:"volumechange"},window.Player=window.Player||{},window.Player.Events={MediaPaused:"MediaPaused",MediaPlay:"MediaStarted",MediaStopped:"MediaStopped",MediaChanged:"MediaChanged",TimeUpdated:"TimeUpdated",PlaybackDetailsUpdated:"PlaybackDetailsUpdated"},window.Player=window.Player||{},window.Player.VolumeControlService=function(a){this.player=a,this.volumeStep=.1},window.Player.VolumeControlService.prototype={setVolumeLevel:function(a){this.player.setVolume(a),UserNotifier.getInstance().info("Volume level set to "+Math.round(100*a)+"%")},getVolumeLevel:function(){return this.player.getVolume()},increase:function(){var a=this.getVolumeLevel();a+=this.volumeStep,a>1&&(a=1),this.setVolumeLevel(a)},decrease:function(){var a=this.getVolumeLevel();a+=this.volumeStep,0>a&&(a=0),this.setVolumeLevel(a)},mute:function(){}},window.Player=window.Player||{},window.Player.VideoSizeControlService=function(a,b,c){this.player=a,this.fullScreenContainer=b,this.config=c},window.Player.VideoSizeControlService.prototype={_checkIfFullScreenModeIsOff:function(){return!(document.fullscreenElement||document.mozFullScreenElement||document.webkitFullscreenElement||document.msFullscreenElement)},_handleFullScreenModeOn:function(){this.player.setSize(window.screen.width,window.screen.height)},_handleFullScreenModeOff:function(){this.player.setSize(this.config.defaultVideoWidth,this.config.defaultVideoHeight)},_handleFullScreenModeChanged:function(){this._checkIfFullScreenModeIsOff()?this._handleFullScreenModeOff():this._handleFullScreenModeOn()},initialise:function(){document.addEventListener("fullscreenchange",$.proxy(this._handleFullScreenModeChanged,this),!1),document.addEventListener("mozfullscreenchange",$.proxy(this._handleFullScreenModeChanged,this),!1),document.addEventListener("webkitfullscreenchange",$.proxy(this._handleFullScreenModeChanged,this),!1)},setFullScreenModeOn:function(){(document.fullscreenEnabled||document.mozFullScreenEnabled||document.webkitFullscreenEnabled)&&(this.fullScreenContainer.requestFullscreen?this.fullScreenContainer.requestFullscreen():this.fullScreenContainer.webkitRequestFullscreen?this.fullScreenContainer.webkitRequestFullscreen():this.fullScreenContainer.mozRequestFullScreen?this.fullScreenContainer.mozRequestFullScreen():this.fullScreenContainer.msRequestFullscreen&&this.fullScreenContainer.msRequestFullscreen())},setFullScreenModeOff:function(){document.exitFullscreen?document.exitFullscreen():document.msExitFullscreen?document.msExitFullscreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitExitFullscreen&&document.webkitExitFullscreen()},toggleFullScreenMode:function(){this._checkIfFullScreenModeIsOff()?this.setFullScreenModeOn():this.setFullScreenModeOff()}},window.Tracking=window.Tracking||{},GoogleTracker=function(){GoogleTracker._instance=null},GoogleTracker.setInstance=function(a){if(null!==GoogleTracker._instance){var b="Instance of GoogleTracker has been already set!";throw Logger.getInstance().error(b),b}GoogleTracker._instance=a},GoogleTracker.getInstance=function(){if(null===GoogleTracker._instance){var a="Instance of GoogleTracker has not been set yet!";throw Logger.getInstance().error(a),a}return GoogleTracker._instance},window.Tracking.GoogleEventTrackerImpl=function(a){Logger.getInstance().info("Google tracker has been created."),this.config=a},window.Tracking.GoogleEventTrackerImpl.prototype={trackUiAction:function(a,b,c){b||c?c?ga(this.config.SendParam,this.config.EventParam,this.config.UiCategory,a,b,c):ga(this.config.SendParam,this.config.EventParam,this.config.UiCategory,a,b):ga(this.config.SendParam,this.config.EventParam,this.config.UiCategory,a)}},window.Tracking=window.Tracking||{},window.Tracking.GoogleTrackerConfig={SendParam:"send",EventParam:"event",UiCategory:"ui",ClickAction:"click",PlaybackControl:"playback_control",PlaylistControl:"playlist_control",TestEnvironment:"test_environment",LoggerControl:"logger_control",MediaLoadControl:"media_load",PlaylistItem:"playlist_item"},window.Tracking=window.Tracking||{},window.Tracking.GoogleUiTracker=function(a){this.config=a},window.Tracking.GoogleUiTracker.prototype={hookUpToPlaybackControlEvents:function(a){$(a.PlayButton).click($.proxy(function(){GoogleTracker.getInstance().trackUiAction(this.config.PlaybackControl,"play")},this)),$(a.PauseButton).click($.proxy(function(){GoogleTracker.getInstance().trackUiAction(this.config.PlaybackControl,"pause")},this)),$(a.NextButton).click($.proxy(function(){GoogleTracker.getInstance().trackUiAction(this.config.PlaybackControl,"next")},this)),$(a.PreviousButton).click($.proxy(function(){GoogleTracker.getInstance().trackUiAction(this.config.PlaybackControl,"previous")},this)),$(a.VolumeButton).click($.proxy(function(){GoogleTracker.getInstance().trackUiAction(this.config.PlaybackControl,"volume")},this))},hookUpToPlaylistControlEvents:function(a){$(a.ClearButton).click($.proxy(function(){GoogleTracker.getInstance().trackUiAction(this.config.PlaylistControl,"clear")},this)),$(a.SaveButton).click($.proxy(function(){GoogleTracker.getInstance().trackUiAction(this.config.PlaylistControl,"save")},this)),$(a.ShuffleButton).click($.proxy(function(){GoogleTracker.getInstance().trackUiAction(this.config.PlaylistControl,"shuffle")},this)),$(a.LoopButton).click($.proxy(function(){GoogleTracker.getInstance().trackUiAction(this.config.PlaylistControl,"repeat")},this))},hookUpToTestControlEvents:function(a){$(a.ErrorButton).click($.proxy(function(){GoogleTracker.getInstance().trackUiAction(this.config.TestEnvironment,"open_error_report")},this)),$(a.FeatureButton).click($.proxy(function(){GoogleTracker.getInstance().trackUiAction(this.config.TestEnvironment,"open_feature_request")},this)),$(a.ShowFormButton).click($.proxy(function(){GoogleTracker.getInstance().trackUiAction(this.config.TestEnvironment,"open_test_environment")},this)),$(a.HideFormButton).click($.proxy(function(){GoogleTracker.getInstance().trackUiAction(this.config.TestEnvironment,"close_test_environment")},this))},hookUpToLoggerControlEvents:function(a){$(a.ClearLogsButtonId).click($.proxy(function(){GoogleTracker.getInstance().trackUiAction(this.config.LoggerControl,"clear")},this)),$(a.LoggerLevelComboBox).change($.proxy(function(){GoogleTracker.getInstance().trackUiAction(this.config.LoggerControl,"level_changed",$(a.LoggerLevelComboBox).val())},this))},hookUpToMediaLoadEvents:function(a){$(a.AddNewMediaButton).click($.proxy(function(){GoogleTracker.getInstance().trackUiAction(this.config.MediaLoadControl,"add_new_media_"+$(a.MediaLocationInput).val())},this))},hookUpToPlaylistItemEvents:function(a){$(a.PlaylistItem).click($.proxy(function(){GoogleTracker.getInstance().trackUiAction(this.config.PlaylistItem,"select")},this)),$(a.RemoveButtonContainer).click($.proxy(function(){GoogleTracker.getInstance().trackUiAction(this.config.PlaylistItem,"remove")},this)),$(a.LikeButtonContainer).click($.proxy(function(){GoogleTracker.getInstance().trackUiAction(this.config.PlaylistItem,"licked")},this))},hookUpToSessionControlEvents:function(){}},window.UI=window.UI||{},window.UI.UIControllersFactory=function(){},window.UI.UIControllersFactory.prototype={createUICore:function(){return new window.UI.UICore},createLoggerViewController:function(){return new window.UI.LoggerViewController("#logger-content",window.UI.LoggerUIConfig)},createTestReportViewController:function(){var a=new window.UI.ReportSender;return a.initialise(),new window.UI.TestReportsViewController(a,window.UI.TestReportUIConfig)},createPlaylistViewController:function(a,b,c){return new window.UI.PlaylistViewController(a,b,c,"playlist-container",window.UI.PlaylistUIConfig)},createPlaybackDetailsViewController:function(a){return new window.UI.PlaybackDetailsViewController(a,"playback-progress-container",window.UI.PLaybackDetailsViewConfiguration)},createPlaybackControlViewController:function(a,b){var c=new window.Player.VolumeControlService(a),d=document.getElementById(window.UI.PlaybackControlConfiguration.FullScreenContainer),e=new window.Player.VideoSizeControlService(a,d,window.Player.MediaPlayerConfig);return e.initialise(),new window.UI.PlaybackControlViewController(b,c,e,"playback-control",window.UI.PlaybackControlConfiguration)},createPlaylistControlViewController:function(a,b,c){return new window.UI.PlaylistControlViewController(a,b,c,"playlist-control",window.UI.PlaylistControlConfiguration)},createSessionViewController:function(a){return new window.UI.SessionViewController(a,window.UI.SessionUIConfiguration)},createMediaLoadViewController:function(a){return new window.UI.MediaLoadViewController(a,window.UI.MediaLoadConfig)},createPlaylistItemEditorViewController:function(a){var b=(new window.LastFm.LastFmApiFactory).createInformationProvider();return new window.UI.PlaylistItemDetailsEditorViewController(b,a,window.UI.PlaylistItemDetailsEditorConfig)},createColorSchemeControlViewController:function(){return new window.UI.ColorSchemeControlViewController(window.UI.ColorSchemeControlConfig)},createUserNotificationViewController:function(){return new window.UI.UserNotifierViewController("#user-notifications-container",window.UI.UserNotifierConfiguration)}},window.UI=window.UI||{},window.UI.LoggerLevels={Info:0,Warning:1,Error:2,Debug:3},window.UI.LoggerViewController=function(a,b){this._config=b,this._container=$(a)},window.UI.LoggerViewController.prototype={isLoggingAllowed:!1,currentLoggerLevel:window.UI.LoggerLevels.Info,_clearLogs:function(){this._container.empty()},_enableLogger:function(){this.isLoggingAllowed=!0},_disableLogger:function(){this.isLoggingAllowed=!1},_getStyleForLevel:function(a){switch(a){case window.UI.LoggerLevels.Info:return this._config.InfoStyle;case window.UI.LoggerLevels.Warning:return this._config.WarningStyle;case window.UI.LoggerLevels.Error:return this._config.ErrorStyle;case window.UI.LoggerLevels.Debug:return this._config.DebugStyle;default:return this._config.InfoStyle}},_updateLoggerView:function(a){this._container.children().each(function(){var b=this.getAttribute("level");this.style.display=a>=b?"block":"none"})},_handleLoggedMessage:function(a,b){if(this.isLoggingAllowed){var c=this._getStyleForLevel(b),d=document.createElement(this._config.SingleElementType);d.className=c,d.innerHTML=a,d.setAttribute("level",b),this._container.children().length+1>this._config.MaxNumberOfLogs&&this._container.find(this._config.SingleElementType+":last").remove(),this._container.prepend(d),b>this.currentLoggerLevel&&(d.style.display="none")}},initialise:function(){var a=EventBroker.getInstance();a.addListener(window.Common.LoggerEvents.LoggedInfo,$.proxy(function(a){this._handleLoggedMessage(a,window.UI.LoggerLevels.Info)},this)),a.addListener(window.Common.LoggerEvents.LoggerWarning,$.proxy(function(a){this._handleLoggedMessage(a,window.UI.LoggerLevels.Warning)},this)),a.addListener(window.Common.LoggerEvents.LoggerError,$.proxy(function(a){this._handleLoggedMessage(a,window.UI.LoggerLevels.Error)},this)),a.addListener(window.Common.LoggerEvents.LoggerDebug,$.proxy(function(a){this._handleLoggedMessage(a,window.UI.LoggerLevels.Debug)},this)),$(this._config.ClearLogsButtonId).bind("click",$.proxy(function(){this._clearLogs()},this));var b=$(this._config.IsLoggerEnabledCheckboxId);b.bind("change",$.proxy(function(){b.prop("checked")?this._enableLogger():this._disableLogger()},this));var c=$(this._config.LoggerLevelComboBox);c.bind("change",$.proxy(function(){this.currentLoggerLevel=c.val(),this._updateLoggerView(this.currentLoggerLevel)},this))}},window.UI=window.UI||{},window.UI.LoggerUIConfig={InfoStyle:"logger-info",ErrorStyle:"logger-error",WarningStyle:"logger-warning",DebugStyle:"logger-debug",MaxNumberOfLogs:400,SingleElementType:"div",ClearLogsButtonId:"#clear-logs",IsLoggerEnabledCheckboxId:"#enable-logger",LoggerLevelComboBox:"#logger-level"},window.UI=window.UI||{},window.UI.TestReportUIConfig={ErrorFormContainer:"#error-report",ErrorButton:"#report-bug-btn",ErrorTitle:"#bug-title",ErrorDescription:"#bug-description",ErrorEmail:"#bug-email",FeatureFormContainer:"#feature-report",FeatureButton:"#report-feature-btn",FeatureTitle:"#feedback-title",FeatureDescription:"#feedback-description",FeatureEmail:"#feedback-email",ShowFormButton:".testing-environment-show-button",HideFormButton:".testing-environment-hide-button",TestingFormContainer:"#testing-environment"},window.UI=window.UI||{},window.UI.TestReportsViewController=function(a,b){this._reportSender=a||new window.UI.ReportSender,this._config=b,this._errorContainer=$(b.ErrorFormContainer),this._featureContainer=$(b.FeatureFormContainer)},window.UI.TestReportsViewController.prototype={_hookUpToButtonsEvents:function(){var a=$(this._config.ErrorButton);a.click($.proxy(function(){this._errorContainer.is(":visible")?this._errorContainer.hide():this._errorContainer.show()},this));var b=$(this._config.FeatureButton);b.click($.proxy(function(){this._featureContainer.is(":visible")?this._featureContainer.hide():this._featureContainer.show()},this))},_hookUpFormsActions:function(){this._errorContainer.submit($.proxy(function(a){a.preventDefault(),this._handleErrorReport()},this)),this._featureContainer.submit($.proxy(function(a){a.preventDefault(),this._handleFeatureRequest()},this))},_handleErrorReport:function(){var a=$(this._config.ErrorTitle).val(),b=$(this._config.ErrorDescription).val(),c=$(this._config.ErrorEmail).val();if(a&&b&&c){var d={success:function(){Logger.getInstance().info("Bug report has been sent."),Logger.getInstance().debug("Bug title: "+a),alert("Success.\r\n\rBug report has been sent.\r\nThank you for your effort.\r\n\r\nWe will stay in touch.")},fail:function(){Logger.getInstance().info("Error occurs while sending error report."),alert("Failure.\r\n\r\nSorry cannot send your error report.\r\n\r\nPleas try again.")}};this._reportSender.sendErrorReport(c,a,b,d),this._errorContainer.hide()}},_handleFeatureRequest:function(){var a=$(this._config.FeatureTitle).val(),b=$(this._config.FeatureDescription).val(),c=$(this._config.FeatureEmail).val();if(a&&b&&c){var d={success:function(){Logger.getInstance().info("Feature request has been sent."),alert("Success.\r\n\r\nFeature request has been sent.\r\nThank you for your effort.\r\n\r\nWe will stay in touch.")},fail:function(){Logger.getInstance().info("Error occurs while sending feature request."),alert("Failure.\r\n\r\nSorry cannot send your feature request.\r\n\r\nPleas try again.")}};this._reportSender.sendFeatureRequest(c,a,b,d),this._featureContainer.hide()}},_showForm:function(a){return function(){$(a.TestingFormContainer).show()}},_hideForm:function(a){return function(){$(a.TestingFormContainer).hide()}},initialise:function(){this._errorContainer.hide(),this._featureContainer.hide(),this._hookUpToButtonsEvents(),this._hookUpFormsActions(),$(this._config.ShowFormButton).click(this._showForm(this._config)),$(this._config.HideFormButton).click(this._hideForm(this._config)),this._hideForm(this._config)()}},window.UI=window.UI||{},window.UI.ReportSenderConstants={destinationEmail:"onlinescrobbler@gmail.com",emailScriptLocation:"php/EmailSender.php",errorTag:"[Error]",featureTag:"[FeatureRequest]",usageTag:"[Usage]",logsContainer:"logger-content"},window.UI.ReportSender=function(){},window.UI.ReportSender.prototype={_handleError:function(a){this.sendErrorReport(window.UI.ReportSenderConstants.destinationEmail,"Automatically generated report",a)},_handleApplicationClosed:function(){this.sendUsageReport(window.UI.ReportSenderConstants.destinationEmail,"Application closed report")},_getBrowser:function(){return navigator.appCodeName+" "+navigator.appVersion},_getOperatingSystem:function(){return navigator.platform},_getUserAgent:function(){return navigator.userAgent},_getLogs:function(){for(var a=$("#"+window.UI.ReportSenderConstants.logsContainer).children(),b="",c=0;c<a.length;c++)b+=a[c].innerHTML+"<br>";return b},_generateErrorReportContent:function(a,b){return'<font face="Courier New"><h2>Test report from: '+a+"</h2><h4>Environment details:</h4><ul><li>OS: "+this._getOperatingSystem()+"</li><li>Browser: "+this._getBrowser()+"</li><li>User Agent: "+this._getUserAgent()+"</li></ul><h4>Error description:</h4>"+b+"<h4>Logs:</h4>"+this._getLogs()+"</font>"},_generateUsageReport:function(){return'<font face="Courier New"><h4>Environment details:</h4><ul><li>OS: '+this._getOperatingSystem()+"</li><li>Browser: "+this._getBrowser()+"</li><li>User Agent: "+this._getUserAgent()+"</li></ul><h4>Logs:</h4>"+this._getLogs()+"</font>"},sendErrorReport:function(a,b,c,d){d=d||{success:function(){Logger.getInstance().debug("Error report has been sent.")},fail:function(){Logger.getInstance().debug("Error occurs while sending error report.")}},b=window.UI.ReportSenderConstants.errorTag+" "+b;var e=this._generateErrorReportContent(a,c);$.post(window.UI.ReportSenderConstants.emailScriptLocation,{recipient:window.UI.ReportSenderConstants.destinationEmail,sender:a,subject:b,content:e}).fail(d.fail).done(d.success)},sendFeatureRequest:function(a,b,c,d){d=d||{success:function(){Logger.getInstance().debug("Feature request has been sent.")},fail:function(){Logger.getInstance().debug("Error occurs while sending feature request.")}},b=window.UI.ReportSenderConstants.featureTag+" "+b,$.post(window.UI.ReportSenderConstants.emailScriptLocation,{recipient:window.UI.ReportSenderConstants.destinationEmail,sender:a,subject:b,content:c}).fail(d.fail).done(d.success)},sendUsageReport:function(a,b,c){c=c||{success:function(){Logger.getInstance().debug("Usage report has been sent.")},fail:function(){Logger.getInstance().debug("Error occurs while sending usage report.")}},b=window.UI.ReportSenderConstants.usageTag+" "+b;var d=this._generateUsageReport();$.post(window.UI.ReportSenderConstants.emailScriptLocation,{recipient:window.UI.ReportSenderConstants.destinationEmail,sender:a,subject:b,content:d}).fail(c.fail).done(c.success)},initialise:function(){EventBroker.getInstance().addListener(window.Common.LoggerEvents.LoggerError,this._handleError,null,this),EventBroker.getInstance().addListener(window.Common.ApplicationEvents.ApplicationClosed,this._handleApplicationClosed,null,this)}},window.UI=window.UI||{},window.UI.VolumeControl=function(a,b){this.view=$(a),this.volumeSetCallback=null,this.config=b,this.isEnabled=!0},window.UI.VolumeControl.prototype={_setIndicatorSize:function(a){this.view.find(this.config.VolumeControlIndicator).css("width",a+"%")},_handleNewVolumeLevelSet:function(a){return function(b){if(a.isEnabled){var c=b.target||b.srcElement,d=c.getBoundingClientRect(),e=b.clientX-d.left,f=b.currentTarget.clientWidth,g=e/f*100;a._setIndicatorSize(g),a.volumeSetCallback(g/100)}}},initialise:function(a){this.view.find(this.config.VolumeControlContainer).click(this._handleNewVolumeLevelSet(this)),this._setIndicatorSize(100*a)},bindToVolumeSet:function(a){this.volumeSetCallback=a},disable:function(){this.isEnabled=!1,this.view.find(this.config.VolumeControlContainer).addClass(this.config.VolumeControlDisabled)},enable:function(){this.isEnabled=!0,this.view.find(this.config.VolumeControlContainer).removeClass(this.config.VolumeControlDisabled)
}},window.UI=window.UI||{},window.UI.VolumeControlConfiguration={MainContainer:"#playback-control-volume-container",VolumeControlContainer:".volume-control-indicator-container",VolumeControlIndicator:".volume-control-indicator",VolumeControlDisabled:"volume-control-disabled"},window.UI=window.UI||{},window.UI.PlaybackProgressControl=function(a){this.view=a,this.playbackProgressChangedHandler=null},window.UI.PlaybackProgressControl.prototype={_handlePlaybackProgressChange:function(a){return function(b){var c=b.target||b.srcElement,d=c.getBoundingClientRect(),e=b.clientX-d.left,f=b.currentTarget.clientWidth,g=e/f*100;a.view.find(".playback-progress-bar").css("width",g+"%"),a.playbackProgressChangedHandler(g)}},bindToPlaybackProgressChangedEvent:function(a){this.playbackProgressChangedHandler=a},initialise:function(){this.view.click(this._handlePlaybackProgressChange(this))}},window.UI=window.UI||{},window.UI.UIConstants={PlayerContainer:"media_player",PlaylistContainer:"#playlist .content",TimeElapsedContainer:"#player .time"},window.UI=window.UI||{},window.UI.UICore=function(){},window.UI.UICore.prototype={getPlayerContainer:function(){return window.UI.UIConstants.PlayerContainer},getPlaylistContainer:function(){return $(window.UI.UIConstants.PlaylistContainer)},getTimeElapsedContainer:function(){return $(window.UI.UIConstants.TimeElapsedContainer)}},window.UI=window.UI||{},window.UI.Events={PlaySpecificRequested:"PlaySpecificRequested",PlayNextRequested:"PlayNextRequested",PlayPreviousRequested:"PlayPreviousRequested",PlaylistLoadRequested:"PlaylistLoadRequested",DisableControlButtonsRequested:"DisableControlButtonsRequested",EnableControlButtonsRequested:"EnableControlButtonsRequested",TrackLikeStateChangeRequested:"TrackLikeStateChangeRequested"},window.UI=window.UI||{},window.Player=window.Player||{},window.UI.PlaylistViewController=function(a,b,c,d,e){this.playlistService=a,this.playlistFlowController=c,this.playlistControlService=b,this.view=$("#"+d),this.config=e,this.numberOfNewItems=0},window.UI.PlaylistViewController.prototype={_selectItem:function(a){this.view.find(this.config.PlaylistItem).eq(a).addClass(this.config.CurrentElementStyle)},_deselectAllItems:function(){this.view.find(this.config.PlaylistItem).removeClass(this.config.CurrentElementStyle)},_remove:function(a){this.playlistService.removeItem(a)},_play:function(a){this._deselectAllItems(),this.playlistControlService.playSpecific(a)},_edit:function(a){var b=this.playlistService.getPlaylist().get(a);EventBroker.getInstance().fireEventWithData(window.Player.PlaylistEvents.PlaylistItemEditionRequested,{index:a,mediaDetails:b})},_createNewElement:function(a,b){var c=new window.UI.PlaylistUIItemBuilder(b,this.config);c.initialise();var d=b%2===0;return c.setUpStyles(d?this.config.EvenElementStyle:this.config.OddElementStyle),c.fillBody(a),c.hookUpToEvents(this,this._play,this._remove,this._edit),c.build()},_refreshPlaylistView:function(a){this.numberOfNewItems=a,this.numberOfNewItems>0&&$(this.config.PlaylistProgressBar).show(),this.view.empty();for(var b=this.playlistService.getPlaylist(),c=0;c<b.length();c++){var d=b.get(c);if(d){var e=this._createNewElement(d,c);this.view.append(e)}}this._selectItem(this.playlistFlowController.getCurrentItemIndex())},_handleItemUpdated:function(a){this.numberOfNewItems>0&&this._updateProgressbar(a.index);var b=this._createNewElement(a.mediaDetails,a.index);this.view.find(this.config.PlaylistItem).eq(a.index).replaceWith(b),this._selectItem(this.playlistFlowController.getCurrentItemIndex())},_handleMediaPlayed:function(){this._selectItem(this.playlistFlowController.getCurrentItemIndex())},_updateProgressbar:function(a){var b=(this.numberOfNewItems-(this.playlistService.getPlaylist().length()-1-a))/this.numberOfNewItems*100;$(this.config.PlaylistProgressBar).css({width:b+"%"}),100==b&&($(this.config.PlaylistProgressBar).hide(),this.numberOfNewItems=0)},initialise:function(){EventBroker.getInstance().addListener(window.Player.Events.MediaChanged,this._deselectAllItems,null,this),EventBroker.getInstance().addListener(window.Player.Events.MediaStopped,this._deselectAllItems,null,this),EventBroker.getInstance().addListener(window.Player.Events.MediaPlay,this._handleMediaPlayed,null,this),EventBroker.getInstance().addListener(window.Player.PlaylistEvents.PlaylistItemUpdated,this._handleItemUpdated,null,this),EventBroker.getInstance().addListener(window.Player.PlaylistEvents.PlaylistUpdated,this._refreshPlaylistView,null,this),EventBroker.getInstance().addListener(window.Player.PlaylistEvents.PlaylistCreated,this._refreshPlaylistView,null,this),this.playlistService.refreshPlaylist()}},window.UI=window.UI||{},window.UI.PlaylistUIConfig={PlaylistItem:".playlist-item",RemoveButtonContainer:".playlist-item-remove",EditButtonContainer:".playlist-item-edit",DetailsContainer:".playlist-item-name",TimeContainer:".playlist-item-time",IconsContainer:".playlist-item-icons",AdditionalButtonsContainer:".playlist-item-buttons",CoverContainer:".playlist-item-cover",EvenElementStyle:"playlist-item-even",OddElementStyle:"playlist-item-odd",CurrentElementStyle:"playlist-item-current",SelectedItemStyle:"playlist-item-selected",IndexContainer:".playlist-item-index-container",IndexStyle:".playlist-item-index",PlaylistProgressBar:"#playlist-progressbar",AnimationTime:200},window.UI=window.UI||{},window.UI.PlaylistUIItemBuilder=function(a,b){this._eventBroker=EventBroker.getInstance(),this._index=a,this._config=b,this._item=null,this._removeButton=null,this._editButton=null,this._hoverStyle=null,this._cover=null},window.UI.PlaylistUIItemBuilder.prototype={_onMouseEnter:function(a,b){return function(){$(this).addClass(a),$(b._item).children().find(b._config.AdditionalButtonsContainer).slideDown(b._config.AnimationTime),$(b._item).children().find(b._config.CoverContainer).slideUp(b._config.AnimationTime)}},_onMouseLeave:function(a,b){return function(){$(this).removeClass(a),$(b._item).children().find(b._config.AdditionalButtonsContainer).slideUp(b._config.AnimationTime),$(b._item).children().find(b._config.CoverContainer).slideDown(b._config.AnimationTime)}},_createIcon:function(a){var b=document.createElement("i");return b.className+=a,b},initialise:function(){var a=$("#controls-schemes .playlist-item");this._item=a.clone(),this._item.find(this._config.AdditionalButtonsContainer).hide(),this._cover=this._item.find(this._config.CoverContainer),this._removeButton=this._item.find(this._config.RemoveButtonContainer),this._editButton=this._item.find(this._config.EditButtonContainer)},setUpStyles:function(a){this._item.addClass(a)},fillBody:function(a){this._item.find(this._config.TimeContainer).append(a.duration.getHumanReadable());var b=a.artist.name+" - "+a.title,c="Debug details:\n\nArtist_name: "+a.artist.name+"\nArtist_mbid: "+a.artist.mbid+"\nArtist_url: "+a.artist.url+"\n\nTitle: "+a.title+"\nDuration: "+a.duration.getHumanReadable()+"\nUrl: "+a.url+"\nMediaType: "+a.mediaType+"\nID: "+a.id+"\nmbid: "+a.mbid+"\n\nAlbum_name: "+a.album.name+"\nAlbum_mbid: "+a.album.mbid+"\nAlbum_url: "+a.album.url+"\nAlbum_cover: "+a.album.cover+"\n\nTags: "+a.tags+"\nLove: "+a.loved;this._item.attr("title",c),this._cover.attr("src",a.album.cover),this._item.find(this._config.IndexStyle).append(this._index+1),a.loved&&this._item.find(this._config.IconsContainer).append(this._createIcon("fa fa-heart")),"video/youtube"==a.mediaType&&this._item.find(this._config.IconsContainer).append(this._createIcon("fa fa-youtube")),this._item.find(this._config.DetailsContainer).append(b)},hookUpToEvents:function(a,b,c,d){var e=function(a,b,c){function d(d){d.stopPropagation(),b.call(a,c)}return d},f=e(a,b,this._index),g=this._onMouseEnter(this._hoverStyle,this),h=this._onMouseLeave(this._hoverStyle,this);this._item.click(f),this._item.mouseenter(g),this._item.mouseleave(h);var i=e(a,c,this._index),j=e(a,d,this._index);this._removeButton.click(i),this._editButton.click(j)},build:function(){return this._item}},window.UI=window.UI||{},window.UI.PLaybackDetailsViewConfiguration={PlaybackProgressBarContainer:".playback-progress-bar-container",PlaybackProgressBar:".playback-progress-bar",PlaybackDataBarContainer:".playback-data-bar-container",PlaybackDataBar:".playback-data-bar",PlaybackDetailsContainer:".playback-details-container",PlaybackDetails:".playback-details",PlaybackTime:".playback-time",MouseOverProgressBarSize:"35px",MouseOutProgressBarSize:"35px",MouseOverDataBarSize:"5px",MouseOutDataBarSize:"2px",DisabledClass:"playback-details-disabled"},window.UI=window.UI||{},window.UI.PlaybackDetailsViewController=function(a,b,c){this.view=$("#"+b),this.model=a,this.config=c,this.areControlsEnabled=!1},window.UI.PlaybackDetailsViewController.prototype={_resizeProgressBar:function(a){this.view.find(this.config.PlaybackProgressBarContainer).css("height",a),this.view.find(this.config.PlaybackProgressBar).css("height",a)},_resizeDataBar:function(a){this.view.find(this.config.PlaybackDataBarContainer).css("height",a),this.view.find(this.config.PlaybackDataBar).css("height",a)},_handleMouseEnter:function(a){return function(){a.areControlsEnabled&&(a.view.css("height",a.config.MouseOverProgressBarSize),a.view.find(a.config.PlaybackDetailsContainer).css("height",a.config.MouseOverProgressBarSize),a._resizeProgressBar(a.config.MouseOverProgressBarSize),a._resizeDataBar(a.config.MouseOverDataBarSize),a.view.find(a.config.PlaybackTime).show())}},_handleMouseLeave:function(a){return function(){a.areControlsEnabled&&(a.view.css("height",a.config.MouseOutProgressBarSize),a.view.find(a.config.PlaybackDetailsContainer).css("height",a.config.MouseOutProgressBarSize),a._resizeProgressBar(a.config.MouseOutProgressBarSize),a._resizeDataBar(a.config.MouseOutDataBarSize),a.view.find(a.config.PlaybackTime).hide())}},_handleDetailsUpdateRequest:function(){var a=this.model.getMediaDetails().artist.name+" - "+this.model.getMediaDetails().title,b=this.model.getPlaybackTime()+"/"+this.model.getDuration();this._updateView(this.model.getPlaybackState(),a,b),this._updatePageTitle(this.model.getPlaybackState(),a,b),this._updatePlaybackProgress(this.model.getPlaybackProgress()),this._updateDataProgress(this.model.getDataProgress())},_updatePlaybackProgress:function(a){this.view.find(this.config.PlaybackProgressBar).css("width",a+"%")},_updateDataProgress:function(a){this.view.find(this.config.PlaybackDataBar).css("width",a+"%")},_updateView:function(a,b,c){this.view.find(this.config.PlaybackDetails).html(a+": "+b),this.view.find(this.config.PlaybackTime).html(c)},_updatePageTitle:function(a,b,c){document.title=b+"|"+c},_handleControlsDisableRequest:function(){this.view.find(this.config.PlaybackDetails).html(""),this.view.find(this.config.PlaybackTime).html(""),this.view.addClass(this.config.DisabledClass),this.areControlsEnabled=!1,this.model.clearData(),this._updatePlaybackProgress(0),this._updateDataProgress(0)},_handleControlsEnableRequest:function(){this.areControlsEnabled=!0,this.view.removeClass(this.config.DisabledClass),this._updatePlaybackProgress(0),this._updateDataProgress(0)},initialise:function(){EventBroker.getInstance().addListener(window.Player.Events.PlaybackDetailsUpdated,this._handleDetailsUpdateRequest,null,this),EventBroker.getInstance().addListener(window.UI.Events.DisableControlButtonsRequested,$.proxy(this._handleControlsDisableRequest,this)),EventBroker.getInstance().addListener(window.UI.Events.EnableControlButtonsRequested,$.proxy(this._handleControlsEnableRequest,this));var a=this._handleMouseEnter(this),b=this._handleMouseLeave(this);this.view.mouseenter(a),this.view.mouseleave(b)}},window.UI=window.UI||{},window.UI.PlaybackControlViewController=function(a,b,c,d,e){this.view=$("#"+d),this.playbackControl=a,this.volumeControlService=b,this.sizeControl=c,this.config=e,this.volumeControl=null,this.areControlsEnabled=!1},window.UI.PlaybackControlViewController.prototype={_play:function(a,b){return function(){a.play(),b._showPlayButton()}},_pause:function(a,b){return function(){a.pause(),b._showPauseButton()}},_next:function(a){return function(){a.playNext()}},_previous:function(a){return function(){a.playPrevious()}},_disableButtons:function(){this.view.find(this.config.PlaybackControlButtonClass).attr(this.config.DisabledAttr,!0),this._showPlayButton(),this.areControlsEnabled=!1,this.volumeControl.disable()},_enableButtons:function(){this.view.find(this.config.PlaybackControlButtonClass).removeAttr(this.config.DisabledAttr),this.areControlsEnabled=!0,this.volumeControl.enable()},_handleVolumeLevelChanged:function(a,b){return function(c){a.areControlsEnabled&&b.setVolumeLevel(c)}},_handlePlaybackProgressChanged:function(a,b){return function(c){a.areControlsEnabled&&b.setPlaybackProgress(c)}},_showPlayButton:function(){$(this.config.PlayButton).show(),$(this.config.PauseButton).hide()},_showPauseButton:function(){$(this.config.PlayButton).hide(),$(this.config.PauseButton).show()},_toggleFullScreenMode:function(a){return function(){a.toggleFullScreenMode()}},initialise:function(){$(this.config.PauseButton).hide(),EventBroker.getInstance().addListener(window.Player.Events.MediaPlay,$.proxy(this._showPauseButton,this)),EventBroker.getInstance().addListener(window.Player.Events.MediaPaused,$.proxy(this._showPlayButton,this)),EventBroker.getInstance().addListener(window.Player.Events.MediaStopped,$.proxy(this._showPlayButton,this)),EventBroker.getInstance().addListener(window.UI.Events.DisableControlButtonsRequested,$.proxy(this._disableButtons,this)),EventBroker.getInstance().addListener(window.UI.Events.EnableControlButtonsRequested,$.proxy(this._enableButtons,this)),this.volumeControl=new window.UI.VolumeControl(window.UI.VolumeControlConfiguration.MainContainer,window.UI.VolumeControlConfiguration);var a=this._handleVolumeLevelChanged(this,this.volumeControlService);this.volumeControl.bindToVolumeSet(a),this.volumeControl.initialise(this.volumeControlService.getVolumeLevel()),this.playbackProgressControl=new window.UI.PlaybackProgressControl($("#playback-progress-container"));var b=this._handlePlaybackProgressChanged(this,this.playbackControl);this.playbackProgressControl.bindToPlaybackProgressChangedEvent(b),this.playbackProgressControl.initialise(),this._disableButtons(),this.view.find(this.config.PlayButton).click(this._play(this.playbackControl,this)),this.view.find(this.config.PauseButton).click(this._pause(this.playbackControl,this)),this.view.find(this.config.NextButton).click(this._next(this.playbackControl)),this.view.find(this.config.PreviousButton).click(this._previous(this.playbackControl)),$(this.config.FullScreenModeButton).click(this._toggleFullScreenMode(this.sizeControl))}},window.UI=window.UI||{},window.UI.PlaybackControlConfiguration={PlaybackControlButtonClass:".playback-control-button",PlayButton:".playback-control-play",PauseButton:".playback-control-pause",NextButton:".playback-control-next",PreviousButton:".playback-control-previous",VolumeButton:".playback-control-volume",FullScreenModeButton:".playlist-control-fullscreen",FullScreenContainer:"fullscreen-video-container",DisabledAttr:"disabled"},window.UI=window.UI||{},window.UI.PlaylistControlViewController=function(a,b,c,d,e){this.playlistController=b,this.playlistService=a,this.loveStateModifier=c,this.config=e,this.view=$("#"+d)},window.UI.PlaylistControlViewController.prototype={_changeLoveStateForCurrentTrack:function(a){return function(){a.loveStateModifier.toggleTrackLoveState(a._handleLoveStateChanged(a))}},_handleLoveStateChanged:function(a){return function(b,c){a._setLoveStateForCurrentTrack(c.loved),a.playlistService.updateItem(b,c)}},_handleMediaChanged:function(a){this._setLoveStateForCurrentTrack(a.current.loved)},_setLoveStateForCurrentTrack:function(a){a?$(this.config.LoveButton).addClass(this.config.SelectedButtonClass):$(this.config.LoveButton).removeClass(this.config.SelectedButtonClass)},_clearPlaylist:function(a){return function(){a.clearPlaylist()}},_savePlaylist:function(a){return function(){a.savePlaylist()}},_changeLoopModeState:function(a){return function(){var b=a.playlistController.toggleLoopMode();b?(a.view.find(a.config.LoopButton).addClass(a.config.SelectedButtonClass),UserNotifier.getInstance().info("Playlist loop mode on.")):(a.view.find(a.config.LoopButton).removeClass(a.config.SelectedButtonClass),UserNotifier.getInstance().info("Playlist loop mode off."))}},_shufflePlaylist:function(a){return function(){a.shuffle(),UserNotifier.getInstance().info("Playlist has been shuffled.")}},_disableButtons:function(){this.view.find(this.config.PlaylistControlButtonClass).attr(this.config.DisabledAttr,!0)},_enableButtons:function(){this.view.find(this.config.PlaylistControlButtonClass).removeAttr(this.config.DisabledAttr)},initialise:function(){this.view.find(this.config.LoveButton).click(this._changeLoveStateForCurrentTrack(this)),this.view.find(this.config.ClearButton).click(this._clearPlaylist(this.playlistService)),this.view.find(this.config.SaveButton).click(this._savePlaylist(this.playlistService)),this.view.find(this.config.ShuffleButton).click(this._shufflePlaylist(this.playlistController)),this.view.find(this.config.LoopButton).click(this._changeLoopModeState(this)),EventBroker.getInstance().addListener(window.Player.Events.MediaChanged,this._handleMediaChanged,null,this),EventBroker.getInstance().addListener(window.UI.Events.EnableControlButtonsRequested,$.proxy(this._enableButtons,this)),EventBroker.getInstance().addListener(window.UI.Events.DisableControlButtonsRequested,$.proxy(this._disableButtons,this)),this._disableButtons()}},window.UI=window.UI||{},window.UI.PlaylistControlConfiguration={PlaylistControlButtonClass:".playlist-control-button",ClearButton:".playlist-control-clear",SaveButton:".playlist-control-save",ShuffleButton:".playlist-control-shuffle",LoopButton:".playlist-control-loop",LoveButton:".playlist-control-love",SelectedButtonClass:"playlist-control-button-selected",DisabledAttr:"disabled"},window.UI=window.UI||{},window.UI.SessionUIConfiguration={SignInButton:"#header-session-sign-in",SignOutButton:"#header-session-sign-out",SessionDetailsButton:"#header-session-info",SessionEstablishedContainer:"#header-with-session",NoSessionContainer:"#header-no-session",LinkToPortal:"http://www.lastfm.pl/user/",PortalAuthLink:"http://www.last.fm/api/auth/?api_key=",PortalUrlCallbackParam:"cb="},window.UI=window.UI||{},window.UI.SessionViewController=function(a,b){this.model=a,this.config=b},window.UI.SessionViewController.prototype={_clearToken:function(a){a!=window.Common.UrlParserConstants.URL_PARSE_ERR&&(window.location=window.location.pathname)},_handleSessionError:function(a,b){return function(){a._clearToken(b)}},_handleNewSession:function(a,b){return function(c){a._clearToken(b),$(a.config.SessionDetailsButton).html('<a href="'+a.config.LinkToPortal+c+'" target="_blank"><div class="authentication-button">Hello! '+c+"</div></a>"),$(a.config.SessionEstablishedContainer).show(),$(a.config.NoSessionContainer).hide()}},_handleSessionClosed:function(a){return function(){$(a.config.SessionEstablishedContainer).hide(),$(a.config.NoSessionContainer).show()}},_getToken:function(){var a=new window.Common.UrlParser,b=a.getParameterValue(window.location.href,"token");return Logger.getInstance().debug("Token: "+b+" has been obtained."),b},_createSession:function(a){this.model.createNewSession(a)},_clearCurrentSession:function(){this.model.closeSession()},initialise:function(){$(this.config.SignInButton).click($.proxy(function(){window.location=this.config.PortalAuthLink+window.LastFm.LastFmConstants.API_KEY+"&"+this.config.PortalUrlCallbackParam+document.URL},this)),$(this.config.SignOutButton).click($.proxy(function(){this._clearCurrentSession()},this));var a=this._getToken();$(this.config.SessionEstablishedContainer).hide(),EventBroker.getInstance().addListener(window.LastFm.Events.SessionEstablished,this._handleNewSession(this,a)),EventBroker.getInstance().addListener(window.LastFm.Events.SessionClosed,this._handleSessionClosed(this)),EventBroker.getInstance().addListener(window.LastFm.Events.SessionEstablishmentFailed,this._handleSessionError(this,a)),this._createSession(a)}},window.UI=window.UI||{},window.UI.UserNotifierConfiguration={NotificationTimeout:5e3,AnimationSpeed:500,MaxNumberOfNotifications:2,ErrorClass:"user-notification-error",InfoClass:"user-notification-info",IconContainer:".user-notification-icon",MessageContainer:".user-notification-message",UndoButton:".user-notification-undo-button",CloseButton:".user-notification-close-button",ErrorIconClass:"fa fa-exclamation-circle",InfoIconClass:"fa fa-info-circle"},window.UI.UserNotificationTypes={Info:"info",Error:"error"},window.UI=window.UI||{},window.UI.UserNotifierViewController=function(a,b){this.view=$(a),this.config=b},window.UI.UserNotifierViewController.prototype={_addNewNotification:function(a){a.hide(),this.view.append(a),a.slideDown(this.config.AnimationSpeed)},_handleInfoNotificationRequest:function(a){var b=new window.UI.UserNotificationBuilder(this.config);b.setNotificationType(window.UI.UserNotificationTypes.Info),b.setMessage(a.message),a.undoCallback&&b.setUndoAction(a.undoCallback);var c=b.build();this._addNewNotification(c)},_handleErrorNotificationRequest:function(a){var b=new window.UI.UserNotificationBuilder(this.config);b.setNotificationType(window.UI.UserNotificationTypes.Error),b.setMessage(a.message);var c=b.build();this._addNewNotification(c)},initialise:function(){EventBroker.getInstance().addListener(window.Common.UserNotifierEvents.InfoNotificationRequested,$.proxy(this._handleInfoNotificationRequest,this)),EventBroker.getInstance().addListener(window.Common.UserNotifierEvents.ErrorNotificationRequested,$.proxy(this._handleErrorNotificationRequest,this))}},window.UI=window.UI||{},window.UI.UserNotificationBuilder=function(a){this.config=a,this.item=$("#controls-schemes .user-notification").clone(),this.item.find(this.config.UndoButton).hide(),this.itemRemoveTimer=null},window.UI.UserNotificationBuilder.prototype={_setIcon:function(a){var b=document.createElement("i");b.className+=a,this.item.find(this.config.IconContainer).append(b)},_setStyle:function(a){this.item.addClass(a)},_clearNotification:function(){this.item.slideUp(this.config.AnimationSpeed,function(){this.remove()})},_setItemRemoveTimer:function(){this.itemRemoveTimer=window.setTimeout($.proxy(this._clearNotification,this),this.config.NotificationTimeout)},_killItemRemoveTimer:function(){this.itemRemoveTimer&&window.clearTimeout(this.itemRemoveTimer)},setNotificationType:function(a){switch(a){case window.UI.UserNotificationTypes.Error:this._setIcon(this.config.ErrorIconClass),this._setStyle(this.config.ErrorClass);break;case window.UI.UserNotificationTypes.Info:this._setIcon(this.config.InfoIconClass),this._setStyle(this.config.InfoClass)}},setMessage:function(a){this.item.find(this.config.MessageContainer).append(a)},setUndoAction:function(a){this.item.find(this.config.UndoButton).show(),this.item.find(this.config.UndoButton).click(a)},build:function(){return this.item.mouseenter($.proxy(this._killItemRemoveTimer,this)),this.item.mouseleave($.proxy(this._setItemRemoveTimer,this)),this.item.find(this.config.CloseButton).click($.proxy(this._clearNotification,this)),this._setItemRemoveTimer(),this.item}},window.UI=window.UI||{},window.UI.MediaLoadConfig={MediaLocationInput:"#media-location",AddNewMediaButton:"#add-to-playlist"},window.UI=window.UI||{},window.UI.MediaLoadViewController=function(a,b){this.model=a,this.config=b},window.UI.MediaLoadViewController.prototype={_handlePlaylistUpdated:function(){$(this.config.MediaLocationInput).val("")},_addNewMedia:function(a){var b=new window.Player.YouTubePlaylistLoader;b.loadPlaylistFromUrl(a,$.proxy(function(a){this.model.addToPlaylist(a)},this))},initialise:function(){$(this.config.AddNewMediaButton).click($.proxy(function(a){a.preventDefault(),this._addNewMedia($(this.config.MediaLocationInput).val())},this)),EventBroker.getInstance().addListener(window.Player.PlaylistEvents.PlaylistUpdated,$.proxy(this._handlePlaylistUpdated,this))}},window.UI=window.UI||{},window.UI.PlaylistItemDetailsEditorConfig={Container:"#playlist-item-editor-container",ArtistInput:"#playlist-item-editor-artist",TitleInput:"#playlist-item-editor-title",AlbumInput:"#playlist-item-editor-album",SwapButton:".playlist-item-editor-button-swap",SaveButton:".playlist-item-editor-button-save",CheckButton:".playlist-item-editor-button-check",CloseButton:".playlist-item-editor-button-close",ArtistVerification:".playlist-editor-artist-check",TitleVerification:".playlist-editor-title-check",AlbumVerification:".playlist-editor-album-check",VerificationOk:".playlist-editor-verification-ok",VerificationError:".playlist-editor-verification-err"},window.UI=window.UI||{},window.UI.PlaylistItemDetailsEditorViewController=function(a,b,c){this.detailsProvider=a,this.playlistProvider=b,this.config=c,this.index=null,this.mediaDetails=null},window.UI.PlaylistItemDetailsEditorViewController.prototype={_setVerificationCorrectStatus:function(a){$(a).children(this.config.VerificationOk).show(),$(a).children(this.config.VerificationError).hide()},_setVerificationErrorStatus:function(a){$(a).children(this.config.VerificationOk).hide(),$(a).children(this.config.VerificationError).show()},_verifyItems:function(){this._setVerificationErrorStatus(this.config.ArtistVerification),this._setVerificationErrorStatus(this.config.TitleVerification),this._setVerificationErrorStatus(this.config.AlbumVerification),this.mediaDetails.artist.mbid&&this._setVerificationCorrectStatus(this.config.ArtistVerification),this.mediaDetails.mbid&&this._setVerificationCorrectStatus(this.config.TitleVerification),this.mediaDetails.album.mbid&&this._setVerificationCorrectStatus(this.config.AlbumVerification)},_onItemEditionRequested:function(a){this._show(a.mediaDetails,a.index),this.updateView()},_handleDetailsObtained:function(a){return function(b){a.mediaDetails=b.clone(),a.updateView()}},_retrieveMediaDetails:function(){var a=this.mediaDetails.clone();return a.artist.name=$(this.config.ArtistInput).val(),a.title=$(this.config.TitleInput).val(),a.album.name=$(this.config.AlbumInput).val(),a},_swapArtistNameAndTitle:function(a){a.mediaDetails=a._retrieveMediaDetails();var b=a.mediaDetails.title;a.mediaDetails.title=a.mediaDetails.artist.name,a.mediaDetails.artist.name=b,a.updateView()},_savePlaylistItemDetails:function(a){a.mediaDetails=a._retrieveMediaDetails(),a.playlistProvider.updateItem(a.index,a.mediaDetails),UserNotifier.getInstance().info("Details saved for '"+a.mediaDetails.artist.name+" - "+a.mediaDetails.title+"'"),a._hide()},_hide:function(){this._clearView(),$(this.config.Container).hide(),this.index=null,this.mediaDetails=null},_clearView:function(){$(this.config.ArtistInput).val(""),$(this.config.TitleInput).val(""),$(this.config.AlbumInput).val("")},updateView:function(){this._clearView(),this.mediaDetails.artist.name&&$(this.config.ArtistInput).val(this.mediaDetails.artist.name),this.mediaDetails.title&&$(this.config.TitleInput).val(this.mediaDetails.title),this.mediaDetails.album.name&&$(this.config.AlbumInput).val(this.mediaDetails.album.name),this._verifyItems()},_show:function(a,b){this.index=b,this.mediaDetails=a,$(this.config.Container).show()},initialise:function(){EventBroker.getInstance().addListener(window.Player.PlaylistEvents.PlaylistItemEditionRequested,$.proxy(this._onItemEditionRequested,this)),$(this.config.SwapButton).click($.proxy(function(a){a.preventDefault(),this._swapArtistNameAndTitle(this)},this)),$(this.config.SaveButton).click($.proxy(function(a){a.preventDefault(),this._savePlaylistItemDetails(this)},this)),$(this.config.CheckButton).click($.proxy(function(a){a.preventDefault();var b=this._retrieveMediaDetails();this.detailsProvider.getTrackDetails(b,{user:""},{done:this._handleDetailsObtained(this),fail:function(){}})},this)),$(this.config.CloseButton).click($.proxy(function(a){a.preventDefault(),this._hide()},this))}},window.UI.ColorSchemeControlConfig={ThemeSwitchButton:"#control-button-switch-theme",DarkStyle:"css/themes/dark.css",LightStyle:"css/themes/light.css"},window.UI.ColorSchemeControlViewController=function(a){this.config=a,this.currentTheme=this.config.DarkStyle},window.UI.ColorSchemeControlViewController.prototype={_useDarkColorStyle:function(){this.currentTheme=this.config.DarkStyle,this._changeColorStyle(this.currentTheme)},_useLightColorStyle:function(){this.currentTheme=this.config.LightStyle,this._changeColorStyle(this.currentTheme)},_switchTheme:function(){this.currentTheme===this.config.DarkStyle?this._useLightColorStyle():this._useDarkColorStyle()},_changeColorStyle:function(a){var b=document.getElementsByTagName("link").item(4),c=document.createElement("link");c.setAttribute("rel","stylesheet"),c.setAttribute("type","text/css"),c.setAttribute("href",a);var d=document.getElementsByTagName("head").item(0);d.replaceChild(c,b)},initialise:function(){$(this.config.ThemeSwitchButton).click($.proxy(this._switchTheme,this))}};